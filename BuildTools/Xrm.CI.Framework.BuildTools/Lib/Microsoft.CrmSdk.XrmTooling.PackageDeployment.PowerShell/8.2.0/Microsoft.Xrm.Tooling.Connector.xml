<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Xrm.Tooling.Connector</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Xrm.Tooling.Connector.AttributeData">
            <summary>
            Summary description for AttributeData
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.AttributeData.ActualValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.AttributeData.AttributeLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.AttributeData.AttributeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.AttributeData.DisplayValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.AttributeData.IsUnsupported">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.AttributeData.SchemaName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.BooleanAttributeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.BooleanAttributeData.BooleanOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.StringAttributeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.StringAttributeData.MaxLength">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.PicklistAttributeData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.PicklistAttributeData.PicklistOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.BatchManager">
            <summary>
            This class manages batches for CRM execute Multiple. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.BatchManager.RequestBatches">
            <summary>
            Collection of Batches in use. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.BatchManager.MaxNumberOfBatches">
            <summary>
            Max number of concurrent batches allowed. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.BatchManager.MaxNumberOfRequestsInABatch">
            <summary>
            Max number of requests per batch allowed. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.BatchManager.logger">
            <summary>
            Local Log file. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.BatchManager.#ctor(Microsoft.Xrm.Tooling.Connector.CrmLogEntry,System.Int32,System.Int32)">
            <summary>
            Base Constructor..
            </summary>
            <param name="MaxBatches">Max number of concurrent batches possible</param>
            <param name="MaxRequestPerBatch">Max number of requests per Batch</param>
            <param name="traceLogger">TraceLogger</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.BatchManager.CreateNewBatch(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a new Batch to the Queue
            </summary>
            <param name="name">Name of the batch</param>
            <param name="returnResults">Should the Batch Return results. </param>
            <param name="continueOnError">Should the Batch Continue on Error. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.BatchManager.GetRequestBatchById(System.Guid)">
            <summary>
            Returns the request batch by ID,
            </summary>
            <param name="batchId">ID of the batch to return</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.BatchManager.GetRequestBatchByName(System.String)">
            <summary>
            Returns a request batch by name. 
            </summary>
            <param name="batchName">Name of the Batch. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.BatchManager.AddNewRequestToBatch(System.Guid,Microsoft.Xrm.Sdk.OrganizationRequest,System.String)">
            <summary>
            Add an item to batch. 
            </summary>
            <param name="batchId">ID of the batch</param>
            <param name="request">Organization Service Request to add to the batch</param>
            <param name="debugMsg">debug messages to associate to the batch</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.BatchManager.RemoveBatch(System.Guid)">
            <summary>
            Removes and releases the batch by ID. 
            </summary>
            <param name="batchId"></param>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.RequestBatch">
            <summary>
            Container class for Batches. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.RequestBatch.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="returnResponses">True to return responses, False to not return responses</param>
            <param name="continueOnError">True to continue if anyone item trips an error, False to stop on the first error. </param>
            <param name="batchName">String name of the batch, if blank, a GUID is used</param>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.RequestBatch.BatchId">
            <summary>
            ID of the batch. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.RequestBatch.BatchName">
            <summary>
            DisplayName of the batch. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.RequestBatch.BatchRequestSettings">
            <summary>
            Settings for this Execute Multiple Request. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.RequestBatch.BatchItems">
            <summary>
            Items to execute
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.RequestBatch.BatchResults">
            <summary>
            Results from the Batch. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.RequestBatch.Status">
            <summary>
            Status of the batch. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.BatchItemOrganizationRequest">
            <summary>
            Request object. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.BatchItemOrganizationRequest.Request">
            <summary>
            Organization Service request for the batch
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.BatchItemOrganizationRequest.RequestReferenceNumber">
            <summary>
            Reference Correlation ID
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.BatchItemOrganizationRequest.RequestDebugMessage">
            <summary>
            Request debug Message. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.BatchStatus">
            <summary>
            Status of the batch. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.BatchStatus.Waiting">
            <summary>
            Batch is waiting to be run
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.BatchStatus.Running">
            <summary>
            Batch is currently executing
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.BatchStatus.Complete">
            <summary>
            Batch has completed. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmFieldType">
            <summary>
            Allowed typelist of entities
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.CrmBoolean">
            <summary>
            Bool - Converts from bool
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.CrmDateTime">
            <summary>
            DateTime - Converts from a DataTime Object
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.CrmDecimal">
            <summary>
            Decimal, for money, use CrmMoney - Converts from a decimal type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.CrmFloat">
            <summary>
            Double type, while CRM calls this a float, it is actually a double for money, use CrmMoney - Converts from a double type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.CrmMoney">
            <summary>
            Money Type - Converts from a decimal type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.CrmNumber">
            <summary>
            CRM whole number - Converts from a Int type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.Customer">
            <summary>
            Ref Type for CRM,  Creates an EntityReference 
            You need to provide a Guid as a value, and a the name of an entity for the lookup key 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.Key">
            <summary>
            Primary Key - Converts from a Guid Type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.Lookup">
            <summary>
            Ref Type for CRM,  Creates an EntityReference 
            You need to provide a Guid as a value, and a the name of an entity for the lookup key 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.Picklist">
            <summary>
            Pick List value - Converts from a Int type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.String">
            <summary>
            String type - Converts from a string type.
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.UniqueIdentifier">
            <summary>
            Guid Type - Converts from a Guid Type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmFieldType.Raw">
            <summary>
            User Specified type... will be appended directly. This type must be one of the valid CRM 2011 types
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper">
            <summary>
            Contains a variable definition. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper.#ctor">
            <summary>
            Create a new CRM Data Type
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper.#ctor(System.Object,Microsoft.Xrm.Tooling.Connector.CrmFieldType)">
            <summary>
            Create a new CRM Data Type 
            </summary>
            <param name="data">Data to Set</param>
            <param name="crmFieldType">Type of Data to Set</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper.#ctor(System.Object,Microsoft.Xrm.Tooling.Connector.CrmFieldType,System.String)">
            <summary>
            Create a new CRM Data Type 
            </summary>
            <param name="data">Data to Set</param>
            <param name="crmFieldType">Type of Data to Set</param>
            <param name="relatedEntityName">Name of the related entity, applies to the Field Types: Customer and Lookup</param>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper.Value">
            <summary>
            Value to set
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper.Type">
            <summary>
            Value Type.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper.ReferencedEntity">
            <summary>
            Name of the entity that a Lookup or Related Customer Entity
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClientTokenCache">
            <summary>
            Primary implementation of TokenCache
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClientTokenCache._UseLocalFileEncryption">
            <summary>
            Flag to control if the protected data API should be used.
            this flag needs to be disabled if running under Azure WebApp contexts as they do not provide access to the encryption feature. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClientTokenCache.#ctor(System.String)">
            <summary>
            Constructor with Parameter cacheFilePath
            </summary>
            <param name="cacheFilePath"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClientTokenCache.Clear(System.String)">
            <summary>
            Empties the persistent and in-memory store.
            </summary>
            <param name="tokenFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClientTokenCache.BeforeAccessNotification(Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheNotificationArgs)">
            <summary>
            Triggered right before ADAL needs to access the cache.
            Reload the cache from the persistent store in case it changed since the last access.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClientTokenCache.AfterAccessNotification(Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheNotificationArgs)">
            <summary>
            Triggered right after ADAL accessed the cache.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.AuthenticationType">
            <summary>
             Decision switch for the sort of Auth to login to CRM with 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.AuthenticationType.AD">
            <summary>
            Active Directory Auth
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.AuthenticationType.Live">
            <summary>
            Live Auth
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.AuthenticationType.IFD">
            <summary>
            SPLA Auth
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.AuthenticationType.Claims">
            <summary>
            CLAIMS based Auth
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.AuthenticationType.Office365">
            <summary>
            Office365 base login process
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.AuthenticationType.OAuth">
            <summary>
            OAuth based Auth
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.AuthenticationType.InvalidConnection">
            <summary>
            Invalid connection
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmWebSvc">
            <summary>
            Handles login and setup the connections for Dynamic's CRM
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmWebSvc._ActualCrmOrgUri">
            <summary>
            This is the actual CRM OrgURI used to connect, which could be influenced by the host name given during the connect process. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.firstPass">
            <summary>
             switch for actions that should run only once. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmWebSvc._oAuthar">
            <summary>
            last Authentication Response from oAuth. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.UseExternalConnection">
            <summary>
            Flag indicating that the an External connection to CRM is used to connect. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.#ctor(Microsoft.Xrm.Sdk.Client.OrganizationServiceProxy)">
            <summary>
            Sets up an initialized the CRM Service interface.
            Default Connection uses the UII Connection.. 
            </summary>
            <param name="externalOrgSvcProxy">This is an initialized organization Service proxy</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.#ctor(Microsoft.Xrm.Sdk.WebServiceClient.OrganizationWebProxyClient)">
            <summary>
            Sets up an initialized the CRM Service interface.
            </summary>
            <param name="externalOrgWebProxyClient">This is an initialized organization web Service proxy</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.#ctor(Microsoft.Xrm.Tooling.Connector.AuthenticationType,System.String,System.String,System.String,System.Net.NetworkCredential,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Sets up a Connection to CRM
            </summary>
            <param name="authType">Type of Authentication to use, AD or IDF  </param>
            <param name="hostName">Host name to connect too</param>
            <param name="port">Port Number to Connect too</param>
            <param name="orgName">Organization to Connect too</param>
            <param name="providedCredential">Credential to use to connect</param>
            <param name="useUniqueCacheName">flag that will tell the instance to create a Unique Name for the CRM Cache Objects.</param>
            <param name="ordDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.#ctor(Microsoft.Xrm.Tooling.Connector.AuthenticationType,System.String,System.String,System.String,System.String,System.String,System.Security.SecureString,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Setup a connect via Claims to CRM 
            </summary>
            <param name="authType">Type of Authentication to use, supports Claims only  </param>
            <param name="hostName">Host name to connect too</param>
            <param name="port">Port Number to Connect too</param>
            <param name="orgName">Organization to Connect too</param>
            <param name="homeRealmUrl">Home Realm of the user to connect too</param>
            <param name="userName">User name to use to Connect</param>
            <param name="password">Password to use</param>		
            <param name="useUniqueCacheName">flag that will tell the instance to create a Unique Name for the CRM Cache Objects.</param>
            <param name="ordDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.#ctor(Microsoft.Xrm.Tooling.Connector.AuthenticationType,System.String,System.String,System.Security.SecureString,System.String,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Sets up an initialized the CRM Service interface using windows Live.
            </summary>
            <param name="authType">This form is used for Live Auth Only</param>
            <param name="orgName">Organization to Connect too</param>
            <param name="livePass">Live Password to use</param>
            <param name="liveUserId">Live ID to use</param>
            <param name="crmOnlineRegion">CrmOnlineRegion</param>
            <param name="useUniqueCacheName">flag that will tell the instance to create a Unique Name for the CRM Cache Objects.</param>
            <param name="ordDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.#ctor(Microsoft.Xrm.Tooling.Connector.AuthenticationType,System.String,System.String,System.Security.SecureString,System.String,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Sets up an initialized the CRM Service interface using OAuth.
            </summary>
            <param name="authType">This form is used for Live Auth Only</param>
            <param name="orgName">Organization to Connect too</param>
            <param name="livePass">Live Password to use</param>
            <param name="liveUserId">Live ID to use</param>
            <param name="crmOnlineRegion">CrmOnlineRegion</param>
            <param name="useUniqueCacheName">flag that will tell the instance to create a Unique Name for the CRM Cache Objects.</param>
            <param name="ordDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
            <param name="user">Identifies the user who is logging in</param>
            <param name="clientId">Client Id of the registered application.</param>
            <param name="redirectUri">RedirectUri for the application redirecting to</param>
            <param name="promptBehavior">Whether to prompt when no username/password</param>
            <param name="tokenCachePath">Token Cache Path supplied for storing OAuth tokens</param>
            <param name="hostName">Hostname to connect to</param>
            <param name="port">Port to connect to</param>
            <param name="onPrem">Token Cache Path supplied for storing OAuth tokens</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.DoLogin(Microsoft.Xrm.Tooling.Connector.CrmWebSvc@)">
            <summary>
            Loges into CRM using the supplied parameters. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.DoLiveIdLogin(System.Boolean,Microsoft.Xrm.Tooling.Connector.CrmWebSvc@)">
            <summary>
            Switchable version of DoLogin to support forcing a Login due to an expired token from Windows Live. 
            </summary>
            <param name="forceReLogin">True, clears the catch and forces a login</param>
            <param name="ConnectionObject">Connection Object used to recover the connection object </param>
            <returns>true for success, false for not.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.GenerateCacheKeys(System.Boolean)">
            <summary>
            This is to deal with 2 instances of the CrmWebService being created in the Same Running Instance that would need to connect to different CRM servers.
            </summary>
            <param name="useUniqueCacheName"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.IntilizeService(Microsoft.Xrm.Tooling.Connector.CrmWebSvc@)">
            <summary>
            Initializes the CRM Service
            </summary>
            <returns>Return true on Success, false on failure</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.GetCachedCRMService(Microsoft.Xrm.Tooling.Connector.CrmWebSvc@)">
            <summary>
            Try's to gets the Cached CRM Service from memory.
            on Failure, Initialize a New instance. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.InitCRM2011Service">
            <summary>
            Initialize a Connection to CRM 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.FindAuthorityAndResource(System.Uri,System.String@,Microsoft.Xrm.Sdk.WebServiceClient.DiscoveryWebProxyClient@,Microsoft.Xrm.Sdk.WebServiceClient.OrganizationWebProxyClient@)">
            <summary>
            Find authority and resources 
            </summary>
            <param name="discoveryServiceUri">Service Uri endpoint</param>
            <param name="resource">Resource to connect to</param>
            <param name="svcDiscoveryProxy">Discovery Service Proxy</param>
            <param name="svcWebClientProxy">Organisation Web Proxy</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.GetUriBuilderWithVersion(System.Uri)">
            <summary>
            Forming version tagged UriBuilder
            </summary>
            <param name="discoveryServiceUri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ObtainAuthenticationContext(System.String,System.Boolean,System.String)">
            <summary>
            Obtaining authentication context
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ObtainAccessToken(Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext,System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)">
            <summary>
            Obtain access token for regular popup based authentication
            </summary>
            <param name="authenticationcontext">Authentication Context to be used for connection</param>
            <param name="resource">Resource endpoint to connect</param>
            <param name="clientId">Registered client Id</param>
            <param name="redirectUri">Redirect Uri</param>
            <param name="promptBehavior">Prompt behavior for connecting</param>
            <param name="user">UserIdentifier</param>
            <returns>Authentication result with the access token for the authenticated connection</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ObtainAccessToken(Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext,System.String,System.String,System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Obtain access token for silent login
            </summary>
            <param name="authenticationcontext">Authentication Context to be used for connection</param>
            <param name="resource">Resource endpoint to connect</param>
            <param name="clientId">Registered client Id</param>
            <param name="clientCredentials">Credentials passed for creating a connection</param>
            <returns>Authentication result with the access token for the authenticated connection</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.DiscoverOrganizations(System.Uri,System.ServiceModel.Description.ClientCredentials,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,System.String,System.Boolean,System.String)">
            <summary>
            Discovers the organizations (OAuth Specific)
            </summary>
            <param name="discoveryServiceUri">The discovery service uri.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="user">The user identifier.</param>
            <param name="clientId">The client id of registered Azure app.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior for ADAL library.</param>
            <param name="tokenCachePath">The token cache path.</param>
            <param name="isOnPrem">Determines whether onprem or </param>
            <param name="authority">The authority identifying the registered tenant</param>
            <returns>The list of organizations discovered.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ExecuteAuthenticateServiceProcess(System.Uri,System.ServiceModel.Description.ClientCredentials,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,System.String,System.Boolean,System.String,System.Uri@,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext@,System.String@)">
            <summary>
            Executes Authentication against a service 
            </summary>
            <param name="serviceUrl"></param>
            <param name="clientCredentials"></param>
            <param name="user"></param>
            <param name="clientId"></param>
            <param name="redirectUri"></param>
            <param name="promptBehavior"></param>
            <param name="tokenCachePath"></param>
            <param name="isOnPrem"></param>
            <param name="authority"></param>
            <param name="targetServiceUrl"></param>
            <param name="authContext"></param>
            <param name="resource"></param>
            
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.DiscoverOrganizations(System.Uri,System.Uri,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Discovers the organizations.
            </summary>
            <param name="discoveryServiceUri">The discovery service URI.</param>
            <param name="homeRealmUri">The home realm URI. Not null for federation authentication.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="deviceCredentials">The device credentials.</param>
            <returns>A collection of organizations.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.DiscoverOrganizations(System.Uri,System.Uri,System.Net.NetworkCredential)">
            <summary>
            Discovers the organizations.
            </summary>
            <param name="discoveryServiceUri">The discovery service URI.</param>
            <param name="homeRealmUri">The home realm URI. Not null for federation authentication.</param>
            <param name="networkCredential">The network credential. When given <c>null</c> value, uses the current user network credentials.</param>
            <returns>A collection of organizations.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.GetErrorCode(System.Xml.XmlNode)">
            <summary>
            Returns the error code that is contained in SoapException.Detail.
            </summary>
            <param name="errorInfo">An XmlNode that contains application specific error information.</param>
            <returns>Error code text or empty string.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.GetClientCredentials(System.Net.NetworkCredential)">
            <summary>
            Gets the client credentials.
            </summary>
            <param name="networkCredential">The network credential.</param>
            <returns>The client credentials object.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ConnectAndInitCrmOrgService(Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.Boolean,System.Uri)">
            <summary>
            Connects too and initializes the CRM org Data service. 
            </summary>
            <param name="orgdata">Organization Data</param>
            <param name="IsOnPrem">True if called from the OnPrem Branch</param>
            <param name="homeRealmUri"> URI of the users Home Realm or null</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.EncodeTo64(System.String)">
            <summary>
            To encode the string
            </summary>
            <param name="strtoEncode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.DecodeFrom64(System.String)">
            <summary>
            To Decode the string
            </summary>
            <param name="encodedData"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.BuildOrgConnectUri(Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Builds the Organization Service Connect URI
            - This is done, potentially replacing the original string, to deal with the discovery service returning an unusable string, for example, a DNS name that does not resolve. 
            </summary>
            <param name="orgdata">Org Data found from the Discovery Service.</param>
            <returns>CRM Connection URI</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.GenerateDeviceCreds">
            <summary>
            This Generates an ID For the local machine from the Live ID system 
            this should be used only for the Live ID system
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.FindCrmOnlineDiscoveryServer(Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers,System.Boolean)">
            <summary>
            Iterates through the list of CRM online Discovery Servers to find one that knows the user. 
            </summary>
            <param name="onlineServerList"></param>
            <param name="useO365Servers"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.QueryOnlineServersList(System.Collections.ObjectModel.ObservableCollection{Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServer},Microsoft.Xrm.Sdk.Discovery.OrganizationDetailCollection,Microsoft.Xrm.Tooling.Connector.Model.CrmOrgList)">
            <summary>
            Iterate over the discovery servers available. 
            </summary>
            <param name="svrs"></param>
            <param name="col"></param>
            <param name="orgsList"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.QueryLiveDiscoveryServer(System.Uri)">
            <summary>
            Query an individual Live System
            </summary>
            <param name="discoServer"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.AddOrgToOrgList(Microsoft.Xrm.Sdk.Discovery.OrganizationDetailCollection,System.String,System.Uri,Microsoft.Xrm.Tooling.Connector.Model.CrmOrgList@)">
            <summary>
            Adds an Org to the List of Orgs
            </summary>
            <param name="discoveryServer"></param>
            <param name="discoveryServerUri"></param>
            <param name="organizationDetailList"></param>
            <param name="orgList"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.AddOrgToOrgList(Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.String,Microsoft.Xrm.Tooling.Connector.Model.CrmOrgList@)">
            <summary>
            Adds an Org to the List of Orgs
            </summary>
            <param name="organizationDetail"></param>
            <param name="discoveryServer"></param>		
            <param name="orgList"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CheckForConnectionTokenTimeOut">
            <summary>
            Checks to see if the Connection has timed out. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.RefreshWebProxyClientToken">
            <summary>
            Refresh web proxy client token
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CreateAndAuthenticateProxy``1(Microsoft.Xrm.Sdk.Client.IServiceManagement{``0},System.Uri,System.Uri,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Description.ClientCredentials,System.String)">
            <summary>
            Creates and authenticates the Service Proxy for either the discovery server or organization service for CRM
            </summary>
            <typeparam name="T">Service Management Type</typeparam>
            <param name="servicecfg">Initialized Service Management object or null. </param>
            <param name="ServiceUri">URL to connect too</param>
            <param name="homeRealm">HomeRealm URI</param>
            <param name="userCredentials">User Credentials object</param>
            <param name="deviceCredentials">Device Credentials object</param>
            <param name="LogString">Log Preface string. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ClaimsIFDFailOverAuth``1(Microsoft.Xrm.Sdk.Client.IServiceManagement{``0},System.Uri,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Description.ClientCredentials,System.Int32,System.Boolean)">
            <summary>
            Handles direct authentication and fall though support to Kerb for Federation environments where configured for fall though
            </summary>
            <typeparam name="T">Type of Service being authenticated</typeparam>
            <param name="servicecfg">Service configuration</param>
            <param name="homeRealm">HomeRelam of the service</param>
            <param name="userCredentials">User Credentials</param>
            <param name="deviceCredentials">Device Credentials.</param>
            <param name="tryNetworkCred">Internal Fall though switch</param>
            <param name="depthLevel">internal call back value</param>
            <returns>AuthenticationCredentials configured or null. </returns>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ServiceCACHEName">
            <summary>
            Service CacheName
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.Authority">
            <summary>
            Cached Authority
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.UserId">
            <summary>
            Cached userid
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CalledbyExecuteRequest">
            <summary>
            Flag indicating that the an request called by Execute_Command used for OAuth
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CrmServiceAccessCredential">
            <summary>
            Get and Set of network credentials... 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.InternetProtocalToUse">
            <summary>
            Type of protocol to use
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.AuthenticationTypeInUse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CrmSvc">
            <summary>
            Returns the CRM Service.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CrmWebClient">
            <summary>
            Returns the CRM Web Client
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CustomerOrganization">
            <summary>
            Get / Set the CRM Organization that the customer exists in
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CrmHostPort">
            <summary>
            Gets / Set the CRM Host Port that the web service is listening on
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CrmHostName">
            <summary>
            Gets / Set the CRM Hostname that the web service is listening on. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CrmUser">
            <summary>
            Returns the Current CRM User. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.CrmConnectOrgUriActual">
            <summary>
            Returns the Actual URI used to connect to CRM. 
            this URI could be influenced by user defined variables. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ConnectedOrgFriendlyName">
            <summary>
            Returns the friendly name of the connected org. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ConnectedOrgPublishedEndpoints">
            <summary>
            Returns the endpoint collection for the connected org. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.OrganizationVersion">
            <summary>
            Version Number of the organization, if null Discovery service process was not run or the value returned was unreadable. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ManagedTokenOrganizationServiceProxy">
            <summary>
            Extension to the Organization Service Proxy to allow for management of reAuthentication
            Base class barrowed from the Plugin Registration tool, and modified for this class. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ManagedTokenOrganizationServiceProxy._deviceCredentials">
            <summary>
            Device Credential store. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ManagedTokenOrganizationServiceProxy.#ctor(Microsoft.Xrm.Sdk.Client.IServiceManagement{Microsoft.Xrm.Sdk.IOrganizationService},System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Support for AD 
            </summary>
            <param name="serviceManagement"></param>
            <param name="clientCredentials"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ManagedTokenOrganizationServiceProxy.#ctor(Microsoft.Xrm.Sdk.Client.IServiceManagement{Microsoft.Xrm.Sdk.IOrganizationService},Microsoft.Xrm.Sdk.Client.SecurityTokenResponse,System.ServiceModel.Description.ClientCredentials)">
            <summary>
             Support for things other then AD. 
            </summary>
            <param name="serviceManagement"></param>
            <param name="securityTokenResponse"></param>
            <param name="clientCredentials"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ManagedTokenOrganizationServiceProxy.AuthenticateDeviceCore">
            <summary>
            Called when the device needs to be r
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ManagedTokenOrganizationServiceProxy.AuthenticateCore">
            <summary>
            Overrides the Authentication core process in the SDK Proxy..
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmWebSvc.ManagedTokenOrganizationServiceProxy.ValidateAuthentication">
            <summary>
            Determines if a ReAuthentication is required for this call. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.SecureStringExtensions">
            <summary>
            Adds a extension to Secure string
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.SecureStringExtensions.ToUnsecureString(System.Security.SecureString)">
            <summary>
            DeCrypt a Secure password 
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient">
            <summary>
            Primary implementation of the API interface for CRM. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient._CachObject">
            <summary>
            Cached Object collection, used for pick lists and such. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CRMLoadedLCIDList">
            <summary>
            List of CRM Language ID's 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CACHOBJECNAME">
            <summary>
            Name of the cache object. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.logEntry">
            <summary>
            Logging object for the CRM Interface. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmConnectionService">
            <summary>
            CRM Web Service Connector layer
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.dynamicAppUtility">
            <summary>
            Dynamic app utility
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.metadataUtlity">
            <summary>
            Metadata Utility
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient._lockObject">
            <summary>
            This is an internal Lock object,  used to sync communication with CRM. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient._BatchManager">
            <summary>
            BatchManager for Execute Multiple. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient._CrmServiceClientTokenCache">
            <summary>
            To cache the token
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.webBrowserargs">
            <summary>
            Dummy parameter added for explicit reference to Microsoft.IdentityModel.Clients.ActiveDirectory.WindowsForms reference in Xrm.Tooling.Connector.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor">
            <summary>
            Default / Non accessible constructor 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(System.String)">
            <summary>
            CrmServiceClient to accept the connectionstring as a parameter
            </summary>
            <param name="crmConnectionString"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ConnectToCrmWebService(System.String)">
            <summary>
            Parse the given connection string 
            Connects to crmwbservice using CreateCRMWebServiceConnection
            </summary>
            <param name="crmConnectionString"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(Microsoft.Xrm.Sdk.Client.OrganizationServiceProxy)">
            <summary>
             Uses the Organization service proxy provided by the user.
            </summary>
            <param name="externalOrgServiceProxy">User Provided Organization service proxy</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(Microsoft.Xrm.Sdk.WebServiceClient.OrganizationWebProxyClient)">
            <summary>
            Uses the Organization Web proxy Client provided by the user
            </summary>
            <param name="externalOrgWebProxyClient">User Provided Organization Web Proxy Client</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(System.Net.NetworkCredential,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Logs in with User Supplied Settings using AD
            </summary>        
            <param name="credential">Initialized Network Credential object</param>
            <param name="hostName">Host name of the server that is hosting the CRM web service</param>
            <param name="port">Port number on the CRM Host Server ( usually 5555 )</param>
            <param name="orgName">Organization name for the CRM Instance.</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
            <param name="useSsl">if true, https:// used</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(System.Net.NetworkCredential,Microsoft.Xrm.Tooling.Connector.AuthenticationType,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Logs in with User Supplied Settings using AD or IFD
            </summary>        
            <param name="credential">Initialized Network Credential object</param>
            <param name="authType">Authorization Type requested, Either AD or SPLA is supported with this constructor</param>
            <param name="hostName">Host name of the server that is hosting the CRM web or discovery service</param>
            <param name="port">Port number on the CRM Host or Discovery Server ( usually 5555 )</param>
            <param name="orgName">Organization name for the CRM Instance.</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
            <param name="useSsl">if true, https:// used</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(System.String,System.Security.SecureString,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail)">
            <summary>
            Logs in with Claims based User ID
            </summary>
            <param name="userId">User Id to login with</param>
            <param name="password">Password to use in Login</param>
            <param name="domain">Domain name to use when logging in</param>
            <param name="homeRealm">Home realm of the user</param>
            <param name="hostName">Host name of the server that is hosting the CRM web or discovery service</param>
            <param name="port">Port number on the CRM Host or Discovery Server ( usually 5555 )</param>
            <param name="orgName">Organization name for the CRM Instance.</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="useSsl">if true, https:// used</param>
            <param name="orgDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(System.String,System.Security.SecureString,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,System.Boolean)">
            <summary>
            Logs in with User Supplied Settings using Windows Live or Office 365
            </summary>
            <param name="crmUserId">UserName for Live or Office 365</param>
            <param name="crmPassword">Password for Live or Office 365</param>
            <param name="crmRegion">Region that the CRM live or office 365 servers is provisioned in, if empty, a search will be run.</param>
            <param name="orgName">Organization name for the CRM Instance.</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="useSsl">if true, https:// used</param>
            <param name="orgDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
            <param name="isOffice365">if true, uses OSDP / office 365 methods</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(System.String,System.Security.SecureString,System.String,System.String,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,System.Uri,System.String,Microsoft.Xrm.Sdk.WebServiceClient.OrganizationWebProxyClient,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)">
            <summary>
            Log in with OAuth for online connections.
            </summary>
            <param name="crmUserId">User Id supplied</param>
            <param name="crmPassword">Password for login</param>
            <param name="crmRegion">Region where server is provisioned in for login</param>
            <param name="orgName">Name of the organisation to connect</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
            <param name="user">The user identifier.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="redirectUri">The redirect URI application will be redirected post OAuth authentication.</param>
            <param name="promptBehavior">The prompt Behavior.</param>
            <param name="tokenCachePath">The token cache path where token cache file is placed.</param>
            <param name="externalOrgWebProxyClient">The proxy for OAuth.</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.#ctor(System.String,System.Security.SecureString,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,System.Uri,System.String,Microsoft.Xrm.Sdk.WebServiceClient.OrganizationWebProxyClient,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)">
            <summary>
            Log in with OAuth for OnPrem connections.
            </summary>
            <param name="crmUserId">User Id supplied</param>
            <param name="crmPassword">Password for login</param>
            <param name="domain">Domain</param>
            <param name="homeRealm">Name of the organisation to connect</param>
            <param name="hostName">Host name of the server that is hosting the CRM web service</param>
            <param name="port">Port number on the CRM Host Server ( usually 444 )</param>
            <param name="orgName">Organization name for the CRM Instance.</param>
            <param name="useSsl">if true, https:// used</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
            <param name="user">The user identifier.</param>
            <param name="clientId">The registered client Id on Azure portal.</param>
            <param name="redirectUri">The redirect URI application will be redirected post OAuth authentication.</param>
            <param name="promptBehavior">The prompt Behavior.</param>
            <param name="tokenCachePath">The token cache path where token cache file is placed.</param>
            <param name="externalOrgWebProxyClient">The proxy for OAuth.</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateCRMWebServiceConnection(Microsoft.Xrm.Sdk.Client.OrganizationServiceProxy,Microsoft.Xrm.Tooling.Connector.AuthenticationType,System.String,System.String,System.String,System.Net.NetworkCredential,System.String,System.Security.SecureString,System.String,System.String,System.String,System.Boolean,System.Boolean,Microsoft.Xrm.Sdk.Discovery.OrganizationDetail,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,System.String,Microsoft.Xrm.Sdk.WebServiceClient.OrganizationWebProxyClient)">
            <summary>
            Sets up the CRM Web Service Connection
             For Connecting via AD
            </summary>
            <param name="externalOrgServiceProxy">if populated, is the org service to use to connect to CRM</param>
            <param name="requestedAuthType">Authentication Type requested</param>
            <param name="hostName">Host name of the server that is hosting the CRM web service</param>
            <param name="port">Port number on the CRM Host Server ( usually 5555 )</param>
            <param name="orgName">Organization name for the CRM Instance.</param>
            <param name="credential">Network Credential Object used to login with</param>
            <param name="userId">Live ID to connect with</param>
            <param name="password">Live ID Password to connect with</param>
            <param name="domain">Name of the Domain where the CRM is deployed</param>
            <param name="CrmOnlineRegion">Region hosting the CRM online Server, can be NA, EMEA, APAC</param>
            <param name="claimsHomeRealm">HomeRealm Uri for the user</param>
            <param name="useSsl">if true, https:// used</param>
            <param name="useUniqueInstance">if set, will force the system to create a unique connection</param>
            <param name="orgDetail">CRM Org Detail object, this is is returned from a query to the CRM Discovery Server service. not required.</param>
            <param name="user">The user identifier.</param>
            <param name="clientId">Registered Client Id on Azure</param>
            <param name="promptBehavior">Default Prompt Behavior</param>
            <param name="redirectUri">Registered redirect uri for ADAL to return</param>
            <param name="tokenCachePath">Token cache path where the token shall be stored for persistent storage</param>
            <param name="externalOrgWebProxyClient">OAuth related web proxy client</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.DiscoverOrganizations(System.Uri,System.ServiceModel.Description.ClientCredentials,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,System.Uri,System.String,System.Boolean,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)">
            <summary>
            Discovers the organizations, used for OAuth.
            </summary>
            <param name="discoveryServiceUri">The discovery service URI.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="user">The user identifier.</param>
            <param name="clientId">The client Id.</param>
            <param name="redirectUri">The redirect uri.</param>
            <param name="promptBehavior">The prompt behavior.</param>
            <param name="tokenCachePath">The token cache path where token cache file is placed.</param>
            <param name="isOnPrem">The deployment type: OnPrem or Online.</param>
            <param name="authority">The authority provider for OAuth tokens. Unique if any already known.</param>
            <returns>A collection of organisations</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.DiscoverOrganizations(System.Uri,System.Uri,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.Description.ClientCredentials)">
            <summary>
            Discovers the organizations.
            </summary>
            <param name="discoveryServiceUri">The discovery service URI.</param>
            <param name="homeRealmUri">The home realm URI. Not null for federation authentication.</param>
            <param name="clientCredentials">The client credentials.</param>
            <param name="deviceCredentials">The device credentials.</param>
            <returns>A collection of organizations.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.DiscoverOrganizations(System.Uri,System.Uri,System.Net.NetworkCredential)">
            <summary>
            Discovers the organizations.
            </summary>
            <param name="discoveryServiceUri">The discovery service URI.</param>
            <param name="homeRealmUri">The home realm URI. Not null for federation authentication.</param>
            <param name="networkCredential">The network credential. When given <c>null</c> value, uses the current user network credentials.</param>
            <returns>A collection of organizations.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateBatchOperationRequest(System.String,System.Boolean,System.Boolean)">
            <summary>
            Create a Batch Request for executing batch operations.  This returns an ID that will be used to identify a request as a batch request vs a "normal" request. 
            </summary>
            <param name="batchName">Name of the Batch</param>
            <param name="returnResults">Should Results be returned</param>
            <param name="continueOnError">Should the process continue on an error.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetBatchOperationIdRequestByName(System.String)">
            <summary>
            Returns the batch id for a given batch name. 
            </summary>
            <param name="batchName">Name of Batch</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetBatchRequestAtPosition(System.Guid,System.Int32)">
            <summary>
            Returns the organization request at a give position 
            </summary>
            <param name="batchId">ID of the batch</param>
            <param name="position">Position</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ReleaseBatchInfoById(System.Guid)">
            <summary>
            Release a batch from the stack
            Once you have completed using a batch, you must release it from the system.
            </summary>
            <param name="batchId">ID of the batch</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetBatchById(System.Guid)">
            <summary>
            TEMP
            </summary>
            <param name="batchId">ID of the batch</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.RetrieveBatchResponse(System.Guid)">
            <summary>
            Executes the batch command and then parses the retrieved items into a list. 
            If there exists a exception then the LastException would be filled with the first item that has the exception.
            </summary>
            <param name="batchId">ID of the batch to run</param>
            <returns>results which is a list of responses(type <![CDATA[ List<Dictionary<string, Dictionary<string, object>>> ]]>) in the order of each request or null or complete failure  </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ExecuteBatch(System.Guid)">
            <summary>
            Begins running the Batch command. 
            </summary>
            <param name="batchId">ID of the batch to run</param>
            <returns>true if the batch begins, false if not. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateNewRecord(System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.String,System.Boolean,System.Guid)">
            <summary>
            Uses the dynamic entity patter to create a new entity 
            </summary>
            <param name="entityName">Name of Entity To create</param>
            <param name="valueArray">Initial Values</param>
            <param name="applyToSolution">Optional: Applies the update with a solution by Unique name</param>
            <param name="enabledDuplicateDetection">Optional: if true, enabled CRM onboard duplicate detection</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>Guid on Success, Guid.Empty on fail</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.UpdateEntity(System.String,System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.String,System.Boolean,System.Guid)">
            <summary>
            Generic update entity 
            </summary>
            <param name="entityName">String version of the entity name</param>
            <param name="keyFieldName">Key fieldname of the entity </param>
            <param name="id">Guid ID of the entity to update</param>
            <param name="fieldList">Fields to update</param>
            <param name="applyToSolution">Optional: Applies the update with a solution by Unique name</param>
            <param name="enabledDuplicateDetection">Optional: if true, enabled CRM onboard duplicate detection</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.UpdateStateAndStatusForEntity(System.String,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Updates the State and Status of the Entity passed in. 
            </summary>
            <param name="entName">Name of the entity</param>
            <param name="id">Guid ID of the entity you are updating</param>
            <param name="stateCode">String version of the new state</param>
            <param name="statusCode">String Version of the new status</param>
            <param name="batchId">Optional : Batch ID  to attach this request too.</param>
            <returns>true on success. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.UpdateStateAndStatusForEntity(System.String,System.Guid,System.Int32,System.Int32,System.Guid)">
            <summary>
            Updates the State and Status of the Entity passed in. 
            </summary>
            <param name="entName">Name of the entity</param>
            <param name="id">Guid ID of the entity you are updating</param>
            <param name="stateCode">Int version of the new state</param>
            <param name="statusCode">Int Version of the new status</param>
            <param name="batchId">Optional : Batch ID  to attach this request too.</param>
            <returns>true on success. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.DeleteEntity(System.String,System.Guid,System.Guid)">
            <summary>
            Deletes an entity from the CRM
            </summary>
            <param name="entityType">entity type name</param>
            <param name="entityId">entity id</param>
            <param name="batchId">Optional : Batch ID  to attach this request too.</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataBySearchParams(System.String,System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid)">
            <summary>
            Gets a list of accounts based on the search parameters. 
            </summary>
            <param name="entityName">CRM Entity Type Name to search</param>
            <param name="searchParameters">Array of Search Parameters</param>
            <param name="fieldList">List of fields to retrieve, Null indicates all Fields</param>
            <param name="searchOperator">Logical Search Operator</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>List of matching Entity Types. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataBySearchParams(System.String,System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid)">
            <summary>
            Gets a list of accounts based on the search parameters. 
            </summary>
            <param name="entityName">CRM Entity Type Name to search</param>
            <param name="searchParameters">Array of Search Parameters</param>
            <param name="fieldList">List of fields to retrieve, Null indicates all Fields</param>
            <param name="searchOperator">Logical Search Operator</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>List of matching Entity Types. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataBySearchParams(System.String,System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Searches for data from an entity based on the search parameters. 
            </summary>
            <param name="entityName">Name of the entity to search </param>
            <param name="searchParameters">Array of Search Parameters</param>
            <param name="fieldList">List of fields to retrieve, Null indicates all Fields</param>
            <param name="searchOperator">Logical Search Operator</param>
            <param name="pageCount">Number records per Page</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="sortParameters">Sort order</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>List of matching Entity Types. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByFetchSearch(System.String,System.Guid)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>results or null</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByFetchSearchEC(System.String,System.Guid)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>results as an entity collection or null</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByFetchSearch(System.String,System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="pageCount">Number records per Page</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>results or null</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByFetchSearchEC(System.String,System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Searches for data based on a FetchXML query
            </summary>
            <param name="fetchXml">Fetch XML query data.</param>
            <param name="pageCount">Number records per Page</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="isMoreRecords">is there more records or not</param>
            <returns>results as an Entity Collection or null</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByLinkedSearch(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid)">
            <summary>
            Queries an Object via a M to M Link 
            </summary>
            <param name="returnEntityName">Name of the entity you want return data from</param>
            <param name="primarySearchParameters">Search Prams for the Return Entity</param>
            <param name="linkedEntityName">Name of the entity you are linking too</param>
            <param name="linkedSearchParameters">Search Prams for the Entity you are linking too</param>
            <param name="linkedEntityLinkAttribName">Key field on the Entity you are linking too</param>
            <param name="m2MEntityName">CRM Name of the Relationship </param>
            <param name="returnEntityPrimaryId">Key field on the Entity you want to return data from</param>
            <param name="searchOperator">Search Operator to apply</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="fieldList">List of Fields from the Returned Entity you want</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByLinkedSearch(System.String,System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter},System.String,System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter},System.String,System.String,System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.List{System.String},System.Guid,System.Boolean)">
            <summary>
            Queries an Object via a M to M Link 
            </summary>
            <param name="returnEntityName">Name of the entity you want return data from</param>
            <param name="primarySearchParameters">Search Prams for the Return Entity</param>
            <param name="linkedEntityName">Name of the entity you are linking too</param>
            <param name="linkedSearchParameters">Search Prams for the Entity you are linking too</param>
            <param name="linkedEntityLinkAttribName">Key field on the Entity you are linking too</param>
            <param name="m2MEntityName">CRM Name of the Relationship </param>
            <param name="returnEntityPrimaryId">Key field on the Entity you want to return data from</param>
            <param name="searchOperator">Search Operator to apply</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="fieldList">List of Fields from the Returned Entity you want</param>
            <param name="isReflexiveRelationship">If the relationship is defined as Entity:Entity or Account N:N Account, this parameter should be set to true</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataById(System.String,System.Guid,System.Collections.Generic.List{System.String},System.Guid)">
            <summary>
            Gets a List of variables from the account based on the list of field specified in the Fields List
            </summary>
            <param name="searchEntity">The entity to be searched.</param>
            <param name="entityId">ID of Entity to query </param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="fieldList">Populated Array of Key value pairs with the Results of the Search</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateAnnotation(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.Guid)">
            <summary>
            This creates a annotation [note] entry, related to a an existing entity
            <para>Required Properties in the fieldList</para>
            <para>notetext (string) = Text of the note,  </para>
            <para>subject (string) = this is the title of the note</para>
            </summary>
            <param name="targetEntityTypeName">Target Entity TypeID</param>
            <param name="targetEntityId">Target Entity ID</param>
            <param name="fieldList">Fields to populate</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateNewActivityEntry(System.String,System.String,System.Guid,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.Guid)">
            <summary>
            Creates a new activity against the target entity type
            </summary>
            <param name="activityEntityTypeName">Type of Activity you would like to create</param>
            <param name="regardingEntityTypeName">Entity type of the Entity you want to associate with.</param>
            <param name="subject">Subject Line of the Activity</param>
            <param name="description">Description Text of the Activity </param>
            <param name="regardingId">ID of the Entity to associate the Activity too</param>
            <param name="creatingUserId">User ID that Created the Activity *Calling user must have necessary permissions to assign to another user</param>
            <param name="fieldList">Additional fields to add as part of the activity creation</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>Guid of Activity ID or Guid.empty</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CloseActivity(System.String,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Closes the Activity type specified. 
            The Activity Entity type supports fax , letter , and phonecall 
            <para>*Note: This will default to using English names for Status. if you need to use Non-English, you should populate the names for completed for the status and state.</para>
            </summary>
            <param name="activityEntityType">Type of Activity you would like to close.. Supports fax, letter, phonecall</param>
            <param name="activityId">ID of the Activity you want to close</param>
            <param name="stateCode">State Code configured on the activity</param>
            <param name="statusCode">Status code on the activity </param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>true if success false if not.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.UpdateStateStatusForEntity(System.String,System.Guid,System.String,System.String,System.Int32,System.Int32,System.Guid)">
            <summary>
            Updates the state of an activity
            </summary>
            <param name="entName"></param>
            <param name="entId"></param>
            <param name="newState"></param>
            <param name="newStatus"></param>
            <param name="newStateid">ID for the new State ( Skips metadata lookup )</param>
            <param name="newStatusid">ID for new Status ( Skips Metadata Lookup)</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetActivitiesBy(System.String,System.Guid,System.Collections.Generic.List{System.String},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Returns all Activities Related to a given Entity ID. 
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="searchOperator">Search Operator to use</param>
            <param name="searchParameters">Filters responses based on search prams.</param>
            <param name="sortParameters">Sort order</param>
            <param name="pageCount">Number of Pages</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>Array of Activities</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetActivitiesBy(System.String,System.Guid,System.Collections.Generic.List{System.String},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter},System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Returns all Activities Related to a given Entity ID. 
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="searchOperator">Search Operator to use</param>
            <param name="searchParameters">Filters responses based on search prams.</param>
            <param name="sortParameters">Sort order</param>
            <param name="pageCount">Number of Pages</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>Array of Activities</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByRollup(System.String,System.Guid,System.String,System.Collections.Generic.List{System.String},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder},System.Guid)">
            <summary>
            Returns all Activities Related to a given Entity ID. 
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="searchOperator"></param>
            <param name="searchParameters">Filters responses based on search prams.</param>
            <returns>Array of Activities</returns>
            <param name="sortParameters">Sort Order</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="rollupfromEntity">Entity to Rollup from</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDataByRollup(System.String,System.Guid,System.String,System.Collections.Generic.List{System.String},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator,System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter},System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder},System.Int32,System.Int32,System.String,System.String@,System.Boolean@,System.Guid)">
            <summary>
            Returns all Activities Related to a given Entity ID. 
            Only Account, Contact and Opportunity entities are supported.
            </summary>
            <param name="searchEntity">Type of Entity to search against</param>
            <param name="entityId">ID of the entity to search against. </param>
            <param name="fieldList">List of Field to return for the entity , null indicates all fields.</param>
            <param name="rollupfromEntity">Entity to Rollup from</param>
            <param name="searchOperator">Search Operator to user</param>
            <param name="searchParameters">CRM Filter list to apply</param>
            <param name="sortParameters">Sort by</param>
            <param name="pageCount">Number of Pages</param>
            <param name="pageNumber">Current Page number</param>
            <param name="pageCookie">inbound place holder cookie</param>
            <param name="outPageCookie">outbound place holder cookie</param>
            <param name="isMoreRecords">is there more records or not</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetDataByKeyFromResultsSet``1(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            This function gets data from a Dictionary object, where "string" identifies the field name, and Object contains the data,
            this method then attempts to cast the result to the Type requested, if it cannot be cast an empty object is returned.
            </summary>
            <param name="results">Results from the query</param>
            <param name="key">key name you want</param>
            <typeparam name="T">Type if object to return</typeparam>
            <returns>object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ExecuteWorkflowOnEntity(System.String,System.Guid,System.Guid)">
            <summary>
            Executes a named workflow on an object. 
            </summary>
            <param name="workflowName">name of the workflow to run</param>
            <param name="id">ID to exec against</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>Async Op ID of the WF or Guid.Empty</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.SubmitImportRequest(Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest,System.DateTime)">
            <summary>
            Starts an Import request for CRM.
            <para>Supports a single file per Import request.</para>
            </summary>
            <param name="delayUntil">Delays the import jobs till specified time - Use DateTime.MinValue to Run immediately </param>
            <param name="importRequest">Import Data Request</param>
            <returns>Guid of the Import Request, or Guid.Empty.  If Guid.Empty then request failed.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportDataMapToCrm(System.String,System.Boolean,System.Boolean)">
            <summary>
            Used to upload a data map to the CRM
            </summary>
            <param name="dataMapXml">XML of the datamap in string form</param>
            <param name="replaceIds">True to have CRM replace ID's on inbound data, False to have inbound data retain its ID's</param>
            <param name="dataMapXmlIsFilePath">if true, dataMapXml is expected to be a File name and path to load.</param>
            <returns>Returns ID of the datamap or Guid.Empty</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportSolutionToCrm(System.String,System.Guid@,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <para>
            Imports a CRM solution to the CRM Server currently connected.
            <para>*** Note: this is a blocking call and will take time to Import to CRM ***</para>
            </para>
            </summary>
            <param name="solutionPath">Path to the Solution File</param>
            <param name="activatePlugIns">Activate Plugin's and workflows on the Solution </param>
            <param name="importId"><para>This will populate with the Import ID even if the request failed.
            You can use this ID to request status on the import via a request to the ImportJob entity.</para></param>
            <param name="overwriteUnManagedCustomizations">Forces an overwrite of unmanaged customizations of the managed solution you are installing, defaults to false</param>
            <param name="skipDependancyOnProductUpdateCheckOnInstall">Skips dependency against dependencies flagged as product update, defaults to false</param>
            <param name="importAsHoldingSolution">Applies only on CRM organizations version 7.2 or higher.  This imports the CRM solution as a holding solution utilizing the “As Holding” capability of ImportSolution </param>
            <returns>Returns the Import Solution Job ID.  To find the status of the job, query the ImportJob Entity using GetEntityDataByID using the returned value of this method</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.InstallSampleDataToCrm">
            <summary>
            <para>
            Request CRM to install sample data shipped with CRM. Note this is process will take a few moments to execute.  
            <para>This method will return once the request has been submitted.</para>
            </para>
            </summary>
            <returns>ID of the Async job executing the request</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.UninstallSampleDataFromCrm">
            <summary>
            <para>
            Request CRM to remove sample data shipped with CRM. Note this is process will take a few moments to execute.  
            This method will return once the request has been submitted.
            </para>
            </summary>
            <returns>ID of the Async job executing the request</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.IsSampleDataInstalled">
            <summary>
            Determines if the CRM sample data has been installed 
            </summary>
            <returns>True if the sample data is installed, False if not. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateEntityAssociation(System.String,System.Guid,System.String,System.Guid,System.String,System.Guid)">
            <summary>
            Associates one Entity to another where an M2M Relationship Exists. 
            </summary>
            <param name="entityName1">Entity on one side of the relationship</param>
            <param name="entity1Id">The Id of the record on the first side of the relationship</param>
            <param name="entityName2">Entity on the second side of the relationship</param>
            <param name="entity2Id">The Id of the record on the second side of the relationship</param>
            <param name="relationshipName">Relationship name between the 2 entities</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateMultiEntityAssociation(System.String,System.Guid,System.String,System.Collections.Generic.List{System.Guid},System.String,System.Guid,System.Boolean)">
            <summary>
            Associates multiple entities of the same time to a single entity 
            </summary>
            <param name="targetEntity">Entity that things will be related too.</param>
            <param name="targetEntity1Id">ID of entity that things will be related too</param>
            <param name="sourceEntityName">Entity that you are relating from</param>
            <param name="sourceEntitieIds">ID's of the entities you are relating from</param>
            <param name="relationshipName">Name of the relationship between the target and the source entities.</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <param name="isReflexiveRelationship">Optional: if set to true, indicates that this is a N:N using a reflexive relationship</param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.DeleteEntityAssociation(System.String,System.Guid,System.String,System.Guid,System.String,System.Guid)">
            <summary>
            Removes the Association between 2 entity items where an M2M Relationship Exists. 
            </summary>
            <param name="entityName1">Entity on one side of the relationship</param>
            <param name="entity1Id">The Id of the record on the first side of the relationship</param>
            <param name="entityName2">Entity on the second side of the relationship</param>
            <param name="entity2Id">The Id of the record on the second side of the relationship</param>
            <param name="relationshipName">Relationship name between the 2 entities</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>true on success, false on fail</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.AssignEntityToUser(System.Guid,System.String,System.Guid,System.Guid)">
            <summary>
            Assign an Entity to the specified user ID
            </summary>
            <param name="userId">User ID to assign too</param>
            <param name="entityName">Target entity Name</param>
            <param name="entityId">Target entity id</param>
            <param name="batchId">Batch ID of to use, Optional</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.AddEntityToQueue(System.Guid,System.String,System.String,System.Guid,System.Boolean,System.Guid)">
            <summary>
            This will route a Entity to a public queue, 
            </summary>
            <param name="entityId">ID of the Entity to route</param>
            <param name="entityName">Name of the Entity that the Id describes</param>
            <param name="queueName">Name of the Queue to Route Too</param>
            <param name="workingUserId">ID of the user id to set as the working system user</param>
            <param name="setWorkingByUser">if true Set the worked by when doing the assign</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>true on success</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.SendSingleEmail(System.Guid,System.String,System.Guid)">
            <summary>
            this will send an Email to the 
            </summary>
            <param name="emailid">ID of the Email activity</param>
            <param name="token">Tracking Token or Null</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetMyCrmUserId">
            <summary>
            Returns the user ID of the currently logged in user. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CloseQuote(System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.Int32,System.Guid)">
            <summary>
            Closes a quote as won or lost, 
            Revise is not supported via this method 
            </summary>
            <param name="quoteId">ID of the quote to close</param>
            <param name="fieldList">List of fields that need to be updated</param>
            <param name="quoteStatusCode">Status id of the quote,  must be greater then 3 but not 7</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CloseOpportunity(System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.Int32,System.Guid)">
            <summary>
            This will close an opportunity as either Won or lost in CRM
            </summary>
            <param name="opportunityId">ID of the opportunity to close</param>
            <param name="fieldList">List of fields for the Opportunity Close Entity</param>
            <param name="opportunityStatusCode">Status code of Opportunity, Should be either 1 or 2,  defaults to 1 ( won )</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CloseIncident(System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.Int32,System.Guid)">
            <summary>
            Closes an Incident request in CRM, 
            this special handling is necessary to support CRM Built In Object.
            </summary>
            <param name="incidentId">ID of the CRM Incident to close</param>
            <param name="fieldList">List of data items to add to the request, By default, subject is required.</param>
            <param name="incidentStatusCode">Status code to close the incident with, defaults to resolved</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>Guid of the Activity.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CancelSalesOrder(System.Guid,System.Collections.Generic.Dictionary{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},System.Int32,System.Guid)">
            <summary>
            Cancel Sales order 
            </summary>
            <param name="salesOrderId">Sales order id to close</param>
            <param name="fieldList">List of fields to add</param>
            <param name="orderStatusCode">Status code of the order</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CloseTroubleTicket(System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Closes a Trouble ticket by ID
            </summary>
            <param name="ticketId">ID of the Ticket to close</param>
            <param name="subject">Title of the close ticket record</param>
            <param name="description">Description of the closed ticket</param>
            <param name="batchId">Optional: if set to a valid GUID, generated by the Create Batch Request Method, will assigned the request to the batch for later execution, on fail, runs the request immediately </param>
            <returns>Returns the ID of the closed ticket</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetPickListElementFromMetadataEntity(System.String,System.String)">
            <summary>
            Gets a PickList, Status List or StateList from the metadata of an attribute
            </summary>
            <param name="targetEntity">text name of the entity to query</param>
            <param name="attribName">name of the attribute to query</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetGlobalOptionSetMetadata(System.String)">
            <summary>
            Gets a global option set from CRM. 
            </summary>
            <param name="globalOptionSetName">Name of the Option Set To get</param>
            <returns>OptionSetMetadata or null</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetAllEntityMetadata(System.Boolean,Microsoft.Xrm.Sdk.Metadata.EntityFilters)">
            <summary>
            Returns a list of entities with basic data from CRM
            </summary>
            <param name="onlyPublished">defaults to true, will only return published information</param>
            <param name="filter">EntityFilter to apply to this request, note that filters other then Default will consume more time.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityMetadata(System.String,Microsoft.Xrm.Sdk.Metadata.EntityFilters)">
            <summary>
            Returns the Metadata for an entity from CRM, defaults to basic data only. 
            </summary>
            <param name="entityLogicalname">Logical name of the entity</param>
            <param name="queryFilter">filter to apply to the query, defaults to default entity data.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityFormIdListByType(System.String,Microsoft.Xrm.Tooling.Connector.CrmServiceClient.FormTypeId)">
            <summary>
            Returns the Form Entity References for a given form type. 
            </summary>
            <param name="entityLogicalname">logical name of the entity you are querying for form data.</param>
            <param name="formTypeId">Form Type you want</param>
            <returns>List of Entity References for the form type requested.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetAllAttributesForEntity(System.String)">
            <summary>
            Returns all attributes on a entity
            </summary>
            <param name="entityLogicalname">returns all attributes on a entity</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityAttributeMetadataForAttribute(System.String,System.String)">
            <summary>
            Gets metadata for a specific entity's attribute.
            </summary>
            <param name="entityLogicalname">Name of the entity</param>
            <param name="attribName">Attribute Name</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDisplayName(System.String,System.Int32)">
            <summary>
            Gets an Entity Name by Logical name or Type code. 
            </summary>
            <param name="entityName">logical name of the entity </param>
            <param name="entityTypeCode">Type code for the entity </param>
            <returns>Localized name for the entity in the current users language</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDisplayNamePlural(System.String,System.Int32)">
            <summary>
            Gets an Entity Name by Logical name or Type code. 
            </summary>
            <param name="entityName">logical name of the entity </param>
            <param name="entityTypeCode">Type code for the entity </param>
            <returns>Localized plural name for the entity in the current users language</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ResetLocalMetadataCache(System.String)">
            <summary>
            This will clear the Metadata cache for either all entities or the specified entity 
            </summary>
            <param name="entityName">Optional: name of the entity to clear cached info for</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityDisplayNameImpl(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets the Entity Display Name. 
            </summary>
            <param name="entityName"></param>
            <param name="entityTypeCode"></param>
            <param name="getPlural"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityTypeCode(System.String)">
            <summary>
            Gets the typecode of an entity by name. 
            </summary>
            <param name="entityName">name of the entity to get the type code on</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetEntityName(System.Int32)">
            <summary>
            Returns the Entity name for the given Type code
            </summary>
            <param name="entityTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateOrUpdatePickListElement(System.String,System.String,System.Collections.Generic.List{Microsoft.Xrm.Sdk.LocalizedLabel},System.Int32,System.Boolean)">
            <summary>
            Adds an option to a pick list on an entity. 
            </summary>
            <param name="targetEntity">Entity Name to Target</param>
            <param name="attribName">Attribute Name on the Entity</param>
            <param name="locLabelList">List of Localized Labels</param>
            <param name="valueData">integer Value</param>
            <param name="publishOnComplete">Publishes the Update to the Live system.. note this is a time consuming process.. if you are doing a batch up updates, call PublishEntity Separately when you are finished.</param>
            <returns>true on success, on fail check last error.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PublishEntity(System.String)">
            <summary>
            Publishes an entity to the production system, 
            used in conjunction with the Metadata services.
            </summary>
            <param name="entityName">Name of the entity to publish</param>
            <returns>True on success</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LoadCRMLCIDs">
            <summary>
            Loads the Currently loaded languages for CRM
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.RemoveOAuthTokenCache(System.String)">
            <summary>
            Clear the persistent and in-memory store cache
            </summary>
            <param name="tokenCachePath"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.AddPagingParametersToFetchXml(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Adds paging related parameter to the input fetchXml
            </summary>
            <param name="fetchXml">Input fetch Xml</param>
            <param name="pageCount">The number of records to be fetched</param>
            <param name="pageNum">The page number</param>
            <param name="pageCookie">Page cookie</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.MakeSecureString(System.String)">
            <summary>
             Makes a secure string 
            </summary>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.BuildQueryFilter(System.String,System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter},System.Collections.Generic.List{System.String},Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator)">
            <summary>
            Builds the Query expression to use with a Search. 
            </summary>
            <param name="entityName"></param>
            <param name="searchParams"></param>
            <param name="fieldList"></param>
            <param name="searchOperator"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.BuildSearchFilterListFromSearchTerms(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter})">
            <summary>
            Creates a SearchFilterList from a Search string Dictionary 
            </summary>
            <param name="inSearchParams">Inbound Search Strings</param>
            <param name="outSearchList">List that will be populated</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.BuildFilterList(System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter})">
            <summary>
            Builds the filter list for a query
            </summary>
            <param name="searchParams"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetLocalLabel(Microsoft.Xrm.Sdk.Label)">
            <summary>
            Get the localize label from a CRM Label. 
            </summary>
            <param name="crmLabel"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateFaxActivity(System.String,System.String,System.String,System.Guid,System.String)">
            <summary>
            This is the implementation of building a Fax activity. 
            </summary>
            <param name="subject"></param>
            <param name="description"></param>
            <param name="reguardingEntType"></param>
            <param name="reguardingGuid"></param>
            <param name="CreatingUserID"></param>
            <returns>Created Guid or Guid.newguid</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.AddDataToResultSet(System.Collections.Generic.Dictionary{System.String,System.Object}@,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Adds data from a Entity to result set
            </summary>
            <param name="resultSet"></param>
            <param name="dataEntity"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.GetLookupValueForEntity(System.String,System.String)">
            <summary>
            Gets the Lookup Value GUID for any given entity name
            </summary>
            <param name="entName">Entity you are looking for</param>
            <param name="Value">Value you are looking for</param>
            <returns>ID of the lookup value in the entity</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LookupEntitiyID(System.String,System.String,System.String,System.String)">
            <summary>
            Lookup a entity ID by a single search element. 
            Used for Lookup Lists.
            </summary>
            <param name="SearchValue">Text to search for</param>
            <param name="ent">Entity Type to Search in </param>
            <param name="IDField">Field that contains the id</param>
            <param name="SearchField">Field to Search against</param>
            <returns>Guid of Entity or Empty Guid</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.AddValueToPropertyList(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Xrm.Tooling.Connector.CrmDataTypeWrapper},Microsoft.Xrm.Sdk.AttributeCollection)">
            <summary>
            Adds values for an update to a CRM propertyList
            </summary>
            <param name="Field"></param>
            <param name="PropertyList"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CreateResultDataSet(Microsoft.Xrm.Sdk.EntityCollection)">
            <summary>
            Creates and Returns a Search Result Set
            </summary>
            <param name="resp"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.AddRequestToBatch(System.Guid,Microsoft.Xrm.Sdk.OrganizationRequest,System.String,System.String)">
            <summary>
            Adds a request to a batch with display and handling logic
            will fail out if batching is not enabled. 
            </summary>
            <param name="batchId">ID of the batch to add too</param>
            <param name="req">Organization request to Add</param>
            <param name="batchTagText">Batch Add Text, this is the text that will be reflected when the batch is added - appears in the batch diags</param>
            <param name="successText">Success Added Batch - appears in webSvcActions diag</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ExecuteCrmOrganizationRequest(Microsoft.Xrm.Sdk.OrganizationRequest,System.String)">
            <summary>
            Executes a CRM Organization Request (thread safe) and returns the organization response object. Also adds metrics for logging support.
            </summary>
            <param name="req">Organization Request  to run</param>
            <param name="logMessageTag">Message identifying what this request in logging.</param>
            <returns>Result of request or null.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ExecuteCrmEntityDeleteRequest(System.String,System.Guid,System.String)">
            <summary>
            Executes a row level delete on a CRM entity ( thread safe ) and returns true or false. Also adds metrics for logging support.
            </summary>
            <param name="entName">Name of the Entity to delete from</param>
            <param name="entId">ID of the row to delete</param>
            <param name="logMessageTag">Message identifying what this request in logging</param>
            <returns>True on success, False on fail. </returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmCommand_Execute(Microsoft.Xrm.Sdk.OrganizationRequest,System.String)">
            <summary>
            Executes a CRM Create Request and returns the organization response object. 
            </summary>
            <param name="req">Request to run</param>
            <param name="errorStringCheck">Formatted Error string</param>
            <returns>Result of create request or null.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Associate(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Issues an Associate Request to CRM.
            </summary>
            <param name="entityName">Entity Name to associate to</param>
            <param name="entityId">ID if Entity to associate to</param>
            <param name="relationship">Relationship Name</param>
            <param name="relatedEntities">Entities to associate</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Create(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Issues a Create request to CRM
            </summary>
            <param name="entity">Entity to create</param>
            <returns>ID of newly created entity</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Delete(System.String,System.Guid)">
            <summary>
            Issues a Delete request to crm 
            </summary>
            <param name="entityName">Entity name to delete</param>
            <param name="id">ID if entity to delete</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Disassociate(System.String,System.Guid,Microsoft.Xrm.Sdk.Relationship,Microsoft.Xrm.Sdk.EntityReferenceCollection)">
            <summary>
            Issues a Disassociate Request to CRM.
            </summary>
            <param name="entityName">Entity Name to disassociate from</param>
            <param name="entityId">ID if Entity to disassociate from</param>
            <param name="relationship">Relationship Name</param>
            <param name="relatedEntities">Entities to disassociate</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Execute(Microsoft.Xrm.Sdk.OrganizationRequest)">
            <summary>
            Executes a general organization request
            </summary>
            <param name="request">Request object</param>
            <returns>Response object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Retrieve(System.String,System.Guid,Microsoft.Xrm.Sdk.Query.ColumnSet)">
            <summary>
            Issues a Retrieve Request to CRM 
            </summary>
            <param name="entityName">Entity name to request</param>
            <param name="id">ID of the entity to request</param>
            <param name="columnSet">ColumnSet to request</param>
            <returns>Entity object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.RetrieveMultiple(Microsoft.Xrm.Sdk.Query.QueryBase)">
            <summary>
            Issues a RetrieveMultiple Request to CRM
            </summary>
            <param name="query">Query to Request</param>
            <returns>EntityCollection Result</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Update(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Issues an update to CRM. 
            </summary>
            <param name="entity">Entity to update into CRM</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Dispose">
            <summary>
            Disposed the resources used by the CrmService Client. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.IsReady">
            <summary>
            if true the service is ready to accept requests. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.IsBatchOperationsAvailable">
            <summary>
            if true then Batch Operations are available. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.Authority">
            <summary>
            OAuth Authority.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.OAuthUserId">
            <summary>
            Logged in Office365 UserId using OAuth.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ActiveAuthenticationType">
            <summary>
            Authentication Type to use 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ActiveDirectoryWindowsForms">
            <summary>
            Dummy property added for explicit reference to Microsoft.IdentityModel.Clients.ActiveDirectory.WindowsForms reference in Xrm.Tooling.Connector.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.OrganizationServiceProxy">
            <summary>
            Exposed OrganizationServiceProxy for consumers 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.OrganizationWebProxyClient">
            <summary>
             Exposed OrganizationWebProxyClient for consumers
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient._CrmService">
            <summary>
            Pointer to CRM Service. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient._SystemUser">
            <summary>
            Current user Record.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LastCrmError">
            <summary>
            Returns the Last String Error that was created by the CRM Connection
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LastCrmException">
            <summary>
            Returns the Last Exception from CRM. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmConnectOrgUriActual">
            <summary>
            Returns the Actual URI used to connect to CRM. 
            this URI could be influenced by user defined variables. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ConnectedOrgFriendlyName">
            <summary>
            Returns the friendly name of the connected org. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ConnectedOrgUniqueName">
            <summary>
            
            Returns the unique name for the org that has been connected. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ConnectedOrgPublishedEndpoints">
            <summary>
            Returns the endpoint collection for the connected org. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ConnectionLockObject">
            <summary>
            This is the connection lock object that is used to control connection access for various threads. This should be used if you are using the CRM queries via Linq to lock the connection 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ConnectedOrgVersion">
            <summary>
            Returns the Version Number of the connected CRM organization. 
            If access before the Organization is connected, value returned will be null or 0.0 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CallerId">
            <summary>
            Gets or Sets the current caller ID
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.SdkVersionProperty">
            <summary>
            Get the Client SDK version property 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportStatus">
            <summary>
            ImportStatus Reasons
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportStatus.NotImported">
            <summary> Not Yet Imported </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportStatus.InProgress">
            <summary> Import is in Progress </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportStatus.Completed">
            <summary> Import has Completed </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportStatus.Failed">
            <summary> Import has Failed </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListMetaElement">
            <summary>
            PickList data
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListMetaElement.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListMetaElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a PickList item with data. 
            </summary>
            <param name="actualValue"></param>
            <param name="displayValue"></param>
            <param name="pickListLabel"></param>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListMetaElement.ActualValue">
            <summary>
            Current value of the PickList Item
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListMetaElement.PickListLabel">
            <summary>
            Displayed Label
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListMetaElement.DisplayValue">
            <summary>
            Displayed value for the PickList
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListMetaElement.Items">
            <summary>
            Array of Potential Pick List Items.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListItem">
            <summary>
            PickList Item
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListItem.#ctor(System.String,System.Int32)">
            <summary>
            Constructor with data. 
            </summary>
            <param name="label"></param>
            <param name="id"></param>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListItem.DisplayLabel">
            <summary>
            Display label for the PickList Item
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.PickListItem.PickListItemId">
            <summary>
            ID of the picklist item
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter">
            <summary>
            Crm Filter class.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter.#ctor">
            <summary>
            Creates an empty CRM Search Filter. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter.SearchConditions">
            <summary>
            List of CRM Filter conditions
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmSearchFilter.FilterOperator">
            <summary>
            CRM Filter Operator
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmFilterConditionItem">
            <summary>
            CRM Filter item. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmFilterConditionItem.FieldName">
            <summary>
            CRM Field name to Filter on
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmFilterConditionItem.FieldValue">
            <summary>
            Value to use for the Filter
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.CrmFilterConditionItem.FieldOperator">
            <summary>
            CRM Operator to apply
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest">
            <summary>
            Describes an import request for CRM
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.ImportName">
            <summary>
            Name of the Import Request.  this Name will appear in CRM
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.Mode">
            <summary>
            Sets or gets the Import Mode.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.DataMapFileId">
            <summary>
            ID of the DataMap to use
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.DataMapFileName">
            <summary>
            Name of the DataMap File to use
            ID or Name is required
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.UseSystemMap">
            <summary>
            if True, infers the map from the type of entity requested.. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.Files">
            <summary>
            List of files to import in this job,  there must be at least one. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.ImportMode">
            <summary>
            Mode of the Import, Update or Create
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.ImportMode.Create">
            <summary>
            Create a new Import
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportRequest.ImportMode.Update">
            <summary>
            Update to Imported Items
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem">
            <summary>
            Describes an Individual Import Item. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FileName">
            <summary>
            File Name of Individual file
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FileType">
            <summary>
            Type of Import file.. XML or CSV
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FileContentToImport">
            <summary>
            This is the CSV file you wish to import,
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.EnableDuplicateDetection">
            <summary>
            This enabled duplicate detection rules
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.SourceEntityName">
            <summary>
            Name of the entity that Originated the data. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.TargetEntityName">
            <summary>
            Name of the entity that Target Entity the data. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.DataDelimiter">
            <summary>
            This is the delimiter for the Data,
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FieldDelimiter">
            <summary>
            this is the field separator
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.IsFirstRowHeader">
            <summary>
            Is the first row of the CSV the RowHeader?
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.RecordOwner">
            <summary>
            UserID or Team ID of the Record Owner ( from systemuser ) 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.IsRecordOwnerATeam">
            <summary>
            Set true if the Record Owner is a Team
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.DataDelimiterCode">
            <summary>
            Key used to delimit data in the import file
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.DataDelimiterCode.DoubleQuotes">
            <summary>
            Specifies "
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.DataDelimiterCode.None">
            <summary>
            Specifies no delimiter
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.DataDelimiterCode.SingleQuote">
            <summary>
            Specifies '
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FieldDelimiterCode">
            <summary>
            Key used to delimit fields in the import file
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FieldDelimiterCode.Colon">
            <summary>
            Specifies :
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FieldDelimiterCode.Comma">
            <summary>
            Specifies ,
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FieldDelimiterCode.SingleQuote">
            <summary>
            Specifies ' 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FileTypeCode">
            <summary>
            Type if file described in the FileContentToImport
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FileTypeCode.CSV">
            <summary>
            CSV File Type
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.ImportFileItem.FileTypeCode.XML">
            <summary>
            XML File type
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator">
            <summary>
            Logical Search Pram to apply to over all search. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator.None">
            <summary>
            Do not apply the Search Operator
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator.Or">
            <summary>
            Or Search
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSearchOperator.And">
            <summary>
            And Search
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder">
            <summary>
            Logical Search Pram to apply to over all search. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder.Ascending">
            <summary>
            Sort in Ascending
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.LogicalSortOrder.Descending">
            <summary>
            Sort in Descending
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.FormTypeId">
            <summary>
            Used with GetFormIdsForEntity Call
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.FormTypeId.Dashboard">
            <summary>
            Dashboard form
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.FormTypeId.AppointmentBook">
            <summary>
            Appointment book, for service requests. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.FormTypeId.Main">
            <summary>
            Main or default form
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.FormTypeId.Mobile">
            <summary>
            Mobile default form
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.CrmServiceClient.FormTypeId.Other">
            <summary>
            User defined forms
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceIdManager">
            <summary>
            Management utility for the Device Id
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.MaxDeviceNameLength">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.MaxDevicePasswordLength">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.LoadOrRegisterDevice">
            <summary>
            Loads the device credentials (if they exist).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.LoadOrRegisterDevice(System.String,System.String)">
            <summary>
            Loads the device credentials (if they exist).
            </summary>
            <param name="deviceName">Device name that should be registered</param>
            <param name="devicePassword">Device password that should be registered</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.LoadOrRegisterDevice(System.Uri)">
            <summary>
            Loads the device credentials (if they exist).
            </summary>
            <param name="issuerUri">URL for the current token issuer</param>
            <remarks>
            The issuerUri can be retrieved from the IServiceConfiguration interface's CurrentIssuer property.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.LoadOrRegisterDevice(System.Uri,System.String,System.String)">
            <summary>
            Loads the device credentials (if they exist).
            </summary>
            <param name="issuerUri">URL for the current token issuer</param>
            <param name="deviceName">Device name that should be registered</param>
            <param name="devicePassword">Device password that should be registered</param>
            <remarks>
            The issuerUri can be retrieved from the IServiceConfiguration interface's CurrentIssuer property.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.RegisterDevice">
            <summary>
            Registers the given device with Live ID with a random application ID
            </summary>
            <returns>ClientCredentials that were registered</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.RegisterDevice(System.Guid)">
            <summary>
            Registers the given device with Live ID
            </summary>
            <param name="applicationId">ID for the application</param>
            <returns>ClientCredentials that were registered</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.RegisterDevice(System.Guid,System.Uri)">
            <summary>
            Registers the given device with Live ID
            </summary>
            <param name="applicationId">ID for the application</param>
            <param name="issuerUri">URL for the current token issuer</param>
            <returns>ClientCredentials that were registered</returns>
            <remarks>
            The issuerUri can be retrieved from the IServiceConfiguration interface's CurrentIssuer property.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.RegisterDevice(System.Guid,System.String,System.String)">
            <summary>
            Registers the given device with Live ID
            </summary>
            <param name="applicationId">ID for the application</param>
            <param name="deviceName">Device name that should be registered</param>
            <param name="devicePassword">Device password that should be registered</param>
            <returns>ClientCredentials that were registered</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.RegisterDevice(System.Guid,System.Uri,System.String,System.String)">
            <summary>
            Registers the given device with Live ID
            </summary>
            <param name="applicationId">ID for the application</param>
            <param name="issuerUri">URL for the current token issuer</param>
            <param name="deviceName">Device name that should be registered</param>
            <param name="devicePassword">Device password that should be registered</param>
            <returns>ClientCredentials that were registered</returns>
            <remarks>
            The issuerUri can be retrieved from the IServiceConfiguration interface's CurrentIssuer property.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.LoadDeviceCredentials">
            <summary>
            Loads the device's credentials from the file system
            </summary>
            <returns>Device Credentials (if set) or null</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.LoadDeviceCredentials(System.Uri)">
            <summary>
            Loads the device's credentials from the file system
            </summary>
            <param name="issuerUri">URL for the current token issuer</param>
            <returns>Device Credentials (if set) or null</returns>
            <remarks>
            The issuerUri can be retrieved from the IServiceConfiguration interface's CurrentIssuer property.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.DiscoverEnvironment(System.Uri)">
            <summary>
            Discovers the Windows Live environment based on the Token Issuer
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.PersistToFile">
            <summary>
            Indicates whether the registered device credentials should be persisted to the database
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceIdManager.PersistIfDeviceAlreadyExists">
            <summary>
            Indicates that the credentials should be persisted to the disk if registration fails with DeviceAlreadyExists.
            </summary>
            <remarks>
            If the device already exists, there is a possibility that the credentials are the same as the current credentials that
            are being registered. This is especially true in automated environments where the same credentials are used continually (to avoid
            registering spurious device credentials.
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode">
            <summary>
            Indicates an error during registration
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.Unknown">
            <summary>
            Unspecified or Unknown Error occurred
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.InterfaceDisabled">
            <summary>
            Interface Disabled
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.InvalidRequestFormat">
            <summary>
            Invalid Request Format
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.UnknownClientVersion">
            <summary>
            Unknown Client Version
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.BlankPassword">
            <summary>
            Blank Password
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.MissingDeviceUserNameOrPassword">
            <summary>
            Missing Device User Name or Password
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.InvalidParameterSyntax">
            <summary>
            Invalid Parameter Syntax
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.InvalidCharactersInCredentials">
            <summary>
            Invalid Characters are used in the device credentials.
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.InternalError">
            <summary>
            Internal Error
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode.DeviceAlreadyExists">
            <summary>
            Device Already Exists
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException">
            <summary>
            Indicates that Device Registration failed
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.#ctor">
            <summary>
            Construct an instance of the DeviceRegistrationFailedException class
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.#ctor(System.String)">
            <summary>
            Construct an instance of the DeviceRegistrationFailedException class
            </summary>
            <param name="message">Message to pass</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct an instance of the DeviceRegistrationFailedException class
            </summary>
            <param name="message">Message to pass</param>
            <param name="innerException">Exception to include</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.#ctor(Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode,System.String)">
            <summary>
            Construct an instance of the DeviceRegistrationFailedException class
            </summary>
            <param name="code">Error code that occurred</param>
            <param name="subCode">Subcode that occurred</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.#ctor(Microsoft.Xrm.Tooling.Connector.DeviceRegistrationErrorCode,System.String,System.Exception)">
            <summary>
            Construct an instance of the DeviceRegistrationFailedException class
            </summary>
            <param name="code">Error code that occurred</param>
            <param name="subCode">Subcode that occurred</param>
            <param name="innerException">Inner exception</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construct an instance of the DeviceRegistrationFailedException class
            </summary>
            <param name="si"></param>
            <param name="sc"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationFailedException.RegistrationErrorCode">
            <summary>
            Error code that occurred during registration
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationRequest">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationRequest.#ctor">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationRequest.#ctor(System.Guid,Microsoft.Xrm.Tooling.Connector.LiveDevice)">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationRequest.ClientInfo">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationRequest.Authentication">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationClientInfo">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationClientInfo.ApplicationId">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationClientInfo.Version">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationAuthentication">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationAuthentication.MemberName">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationAuthentication.Password">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponse">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponse.IsSuccess">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponse.Puid">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponse.Error">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponse.ErrorSubCode">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponseError">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponseError.Code">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceRegistrationResponseError.RegistrationErrorCode">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.LiveDevice">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.LiveDevice.Version">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.LiveDevice.User">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.LiveDevice.Token">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.LiveDevice.Expiry">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.LiveDevice.ClockSkew">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DeviceUserName">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceUserName.#ctor">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DeviceUserName.ToClientCredentials">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceUserName.DeviceName">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceUserName.UserNameType">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceUserName.EncryptedPassword">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceUserName.DeviceId">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DeviceUserName.DecryptedPassword">
            <summary>
            Internal Use only
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DynamicEntityUtility">
            <summary>
            Summary description for DynamicEntityUtility
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicEntityUtility.GetAttributeDataByEntity(System.String,System.String[])">
            <summary>
            Internal Use only
            </summary>
            <param name="entityName"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicEntityUtility.GetAttributeDataByEntity(System.String,System.Guid,System.String[])">
            <summary>
            Retrieve metadata for a single CRM record
            </summary>
            <param name="entityName">A string name of the entity type being retrieved e.g. contact</param>
            <param name="entityId">A Guid representing the record id we want to retrieve</param>
            <param name="attributes">An array of strings representing the list of attributes we want to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicEntityUtility.RetrieveByIdAsDynamicEntity(System.String,System.Guid,System.String[])">
            <summary>
            Return a single record as a dynamic entity based on a given Guid
            </summary>
            <param name="entityName"></param>
            <param name="entityId"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmLogEntry">
            <summary>
            Log Entry
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase">
            <summary>
            TraceLoggerBase Class. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase._lastError">
            <summary>
            String Builder Info
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase._traceSourceName">
            <summary>
            string _traceSourceName private field
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase._lastException">
            <summary>
            Last Exception
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.#ctor">
            <summary>
            default TraceLoggerBase constructor
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.Initialize">
            <summary>
            Initialize Trace Source 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.ResetLastError">
            <summary>
            Reset the last Stored Error
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.Log(System.String)">
            <summary>
            Log a Message as an Information event. 
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.Log(System.String,System.Diagnostics.TraceEventType)">
            <summary>
            Log a Trace event 
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.Log(System.String,System.Diagnostics.TraceEventType,System.Exception)">
            <summary>
            Log a Trace event
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.Log(System.Exception)">
            <summary>
            Logg an error with an Exception
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.RefreshListeners(System.Collections.Generic.List{Microsoft.Xrm.Tooling.Connector.TraceSourceSetting})">
            <summary>
            To refresh listeners
            </summary>
            <param name="traceSourceSettingCollection"></param>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.Source">
            <summary>
            Trace source
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.TraceSourceName">
            <summary>
            Trace Name
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.LastError">
            <summary>
            Last Error from CRM
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.LastException">
            <summary>
            Last Exception from CRM 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceLoggerBase.CurrentTraceLevel">
            <summary>
            Current Trace level 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.#ctor(System.String)">
            <summary>
            Constructs the CrmLogEntry class. 
            </summary>
            <param name="traceSourceName"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.Log(System.String)">
            <summary>
            Log a Message 
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.Log(System.String,System.Diagnostics.TraceEventType)">
            <summary>
            Log a Trace event 
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.Log(System.String,System.Diagnostics.TraceEventType,System.Exception)">
            <summary>
            Log a Trace event 
            </summary>
            <param name="message"></param>
            <param name="eventType"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.Log(System.Exception)">
            <summary>
            Log an error with an Exception
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.GetExceptionDetail(System.Object,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder)">
            <summary>
            Disassembles the Exception into a readable block
            </summary>
            <param name="objException">Exception to work with</param>
            <param name="sw">Writer to write too</param>
            <param name="level">depth</param>
            <param name="lastErrorMsg">Last Writer to write too</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.FormatExceptionMessage(System.String,System.String,System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Creates the exception message. 
            </summary>
            <param name="source">Source of Exception</param>
            <param name="targetSite">Target of Exception</param>
            <param name="message">Exception Message</param>
            <param name="stackTrace">StackTrace</param>
            <param name="sw">Writer to write too</param>
            <param name="level">Depth of Exception</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.FormatOrgFaultMessage(System.String,System.String,System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Formats an Exception specific to an organization fault.
            </summary>
            <param name="message">Exception Message</param>
            <param name="timeOfEvent">Time occurred</param>
            <param name="errorCode">Error code of message</param>
            <param name="traceText">Message Text</param>
            <param name="sw">Writer to write too</param>
            <param name="level">Depth</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.FormatDeploymentFaultMessage(System.String,System.String,System.String,System.String,System.Text.StringBuilder,System.Int32)">
            <summary>
            Formats an Exception specific to an Deployment fault.
            </summary>
            <param name="message">Exception Message</param>
            <param name="timeOfEvent">Time occurred</param>
            <param name="errorCode">Error code of message</param>
            <param name="traceTextList">Message Text</param>
            <param name="sw">Writer to write too</param>
            <param name="level">Depth</param>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.LastError">
            <summary>
            Last Error from CRM
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmLogEntry.DefaultTraceSourceName">
            <summary>
            Default TraceSource Name 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.TraceControlSettings">
            <summary> 
            This class provides an override for the default trace settings.  
            These settings must be set before the components in the control are used for them to be effective.  
            </summary> 
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceControlSettings.#cctor">
            <summary> 
            Builds the base trace settings 
            </summary> 
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceControlSettings.CloseListeners">
            <summary> 
            Closes any trace listeners that were configured  
            </summary> 
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceControlSettings.AddTraceListener(System.Diagnostics.TraceListener)">
            <summary> 
            Adds a listener to the trace listen array  
            </summary>
            <param name="listenerToAdd">Trace Listener you wish to add</param>
            <returns>true on success, false on fail.</returns>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceControlSettings.RegisterdTraceListeners">
            <summary> 
            Returns the Registered Trace Listeners in the override object.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceControlSettings.TraceLevel">
            <summary> 
            Override Trace Level setting.
            </summary> 
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener">
            <summary>
            Extension to the FileLogTraceListner class.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener.#ctor">
            <summary>
            The class constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener.#ctor(System.String)">
            <summary>
            The class constructor.
            </summary>
            <param name="name">Source Path</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener.IsWritePermitted(System.String)">
            <summary>
            Checks if the CustomLocation Path has write permission
            </summary>
            <param name="Location">Custom Location Path</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
             <summary>
            Trace event is Overriden to check the Log file Access.
             </summary>
             <param name="eventCache">TraceEventCache</param>
             <param name="source">Source</param>
             <param name="eventType">TraceEventType</param>
             <param name="id">Id</param>
             <param name="format">Format Options</param>
             <param name="args">Array of message objects</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Trace event is Overriden to check the Log file Access.
            </summary>
            <param name="eventCache">TraceEventCache</param>
            <param name="source">Source</param>
            <param name="eventType">TraceEventType</param>
            <param name="id">Id</param>
            <param name="message">message string</param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener.GetSupportedAttributes">
            <summary>
            Adding MaxFileCount to the suported attribute list
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.DynamicsFileLogTraceListener.MaxFileCount">
            <summary>
            Number of files to keep while rolling.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.crmHookServiceBehavior">
            <summary>
            THIS IS A TEMP CLASS USED AS A WORK AROUND FOR SOME NLB SITUATIONS,  IT IS DISABLED BY DEFAULT. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.crmMessageInspector">
            <summary/>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.crmMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary/>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.crmMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
            <summary/>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.MetadataUtility">
            <summary>
            Summary description for MetadataUtility
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.MetadataUtility._entityMetadataCache">
            <summary>
            MetadataCache object.
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.MetadataUtility._attributeMetadataCache">
            <summary>
            Attribute metadata cache object
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.MetadataUtility._globalOptionMetadataCache">
            <summary>
            Global option metadata cache object. 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.MetadataUtility._entityNameCache">
            <summary>
            Entity Name catch object
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.MetadataUtility._lockObject">
            <summary>
            Lock object
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.MetadataUtility._metadataLastValidatedAt">
            <summary>
            Last time Entity data was validated. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.ClearCachedEntityMetadata(System.String)">
            <summary>
            Clear a specific meta data entity
            </summary>
            <param name="entityName"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetAllEntityMetadata(System.Boolean,Microsoft.Xrm.Sdk.Metadata.EntityFilters)">
            <summary>
            Retrieves all metadata from the CRM solution.. this is a time consuming task
            </summary>
            <param name="onlyPublished">only return "published" or "published state" of entities</param>
            <param name="filter">the depth if detail on the entity to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetEntityMetadata(System.String)">
            <summary>
            Returns Entity Metadata for requested entity. 
            Applies returns all data available based on CRM version type
            </summary>
            <param name="entityName">Name of the Entity, data is being requested on</param>
            <returns>Entity data</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetEntityMetadata(Microsoft.Xrm.Sdk.Metadata.EntityFilters,System.String)">
            <summary>
            returns entity data for a given entity
            </summary>
            <param name="requestType">What type of entity data do you want</param>
            <param name="entityName">name of the entity to query</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetEntityLogicalName(System.Int32)">
            <summary>
            Get the entity schema name based on the entity type code.
            </summary>
            <param name="entityTypeCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetAttributeMetadata(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityName"></param>
            <param name="attributeName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetAllAttributesMetadataByEntity(System.String)">
            <summary>
            
            </summary>
            <param name="entityName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetRequiredAttributesByEntity(System.String)">
            <summary>
            
            </summary>
            <param name="entityName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.GetGlobalOptionSetMetadata(System.String)">
            <summary>
            Retrieve Global OptionSet Information. 
            </summary>
            <param name="optionSetName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.MetadataUtility.ValidateMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers">
            <summary>
            CRM online Discovery server enumeration
            This is accurate at the time of release of the CRM 2011 Online system. 
            This may changed in the future. Checked the CRM SDK for the most current list.
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers.logger">
            <summary>
            CRM Log entry 
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers._Servers">
            <summary>
            Contains the List of Discovery Servers
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers._OSDPServers">
            <summary>
            Contains the list of Office 365 CRM enabled Discovery Servers 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers.#ctor">
            <summary>
            Default constructor,  Builds baseline data for the Servers.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers.GetServerByShortName(System.String,System.Boolean)">
            <summary>
            Finds a Server by Name in the List or return null. 
            </summary>
            <param name="shortName">Short Name of the server you are looking for</param>
            <param name="isO365">if set, uses the office 365 server list.</param>
            <returns>CrmOnlineDiscoveryServer Data or Null</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers.GetServerShortNameByDisplayName(System.String,System.Boolean)">
            <summary>
            Finds the server short name by server uri
            </summary>
            <param name="serverDisplayName">Name of the Server to find</param>
            <param name="isO365">if set, uses the office 365 server list.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers.Servers">
            <summary>
            Public Property to Access the Servers available. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServers.OSDPServers">
            <summary>
            Public Property to Access Office 365 discovery servers 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServer">
            <summary>
            Describes a discovery server that can be used to determine what organizations a user is a member of. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServer.DisplayName">
            <summary>
            Display name of the Discovery Server
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServer.ShortName">
            <summary>
            Short name of the Discovery Server, this is used to store the server in the users config for later use.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOnlineDiscoveryServer.DiscoveryServer">
            <summary>
            Discovery server Uri, this is the URI necessary to connect to the Discovery server
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgByServer">
            <summary>
            Describes a Single Organization returned from a CRM Discovery server
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgByServer.FriendlyName">
            <summary>
            This is the display name for the organization that a user sees when working in CRM
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgByServer.UniqueOrgName">
            <summary>
            This is the actual name for the organization in CRM, and is required to connect to CRM
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgByServer.OrgDetail">
            <summary>
            This is the details of the Organization, returned directly from CRM
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgByServer.DiscoveryServerName">
            <summary>
            This is the name assigned to the Discovery Server, this is used to visual separate organizations returned by Discovery server used, or Premise solutions. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgByServer.DiscoveryServer">
            <summary>
            This is the URI needed to connect to the Organization
            </summary>
        </member>
        <member name="E:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgByServer.PropertyChanged">
            <summary>
            WCF EVENT hook
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgList">
            <summary>
            Describes the Collection of Orgs that a user may select from. This is used to display the list to the user
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgList.#ctor">
            <summary>
            Container for CRM Orgs List. 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgList.OrgsList">
            <summary>
            List of Orgs
            </summary>
        </member>
        <member name="E:Microsoft.Xrm.Tooling.Connector.Model.CrmOrgList.PropertyChanged">
            <summary>
            WPF EVENT HOOK
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.RefreshListenerDelegate">
            <summary>
            Refresh listener delegate
            </summary>
            <param name="listenerCollection"></param>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.TraceListenerBroker">
            <summary>
            Trace listener broker class
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceListenerBroker.RegisterTraceLogger(Microsoft.Xrm.Tooling.Connector.TraceLoggerBase)">
            <summary>
            Method to register trace logger
            </summary>
            <param name="traceLogger"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceListenerBroker.UnRegisterTraceLogger(Microsoft.Xrm.Tooling.Connector.TraceLoggerBase)">
            <summary>
            Method to un register trace logger
            </summary>
            <param name="traceLogger"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceListenerBroker.PublishTraceListeners">
            <summary>
            Method to refresh listeners for all the registered trace loggers
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.TraceSourceSettingStore">
            <summary>
            Trace setting store
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceSourceSettingStore.AddTraceSettingsToStore(Microsoft.Xrm.Tooling.Connector.TraceSourceSetting)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceSourceSettingStore.GetTraceSourceSettings(System.String)">
            <summary>
            
            </summary>
            <param name="sourceName"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceSourceSettingStore.TraceSourceSettingsCollection">
            <summary>
            Source name of trace listner
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.TraceSourceSetting">
            <summary>
            Parameter for delegate - RegisterdTraceListeners in TraceControlSettingsBase class
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceSourceSetting.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.TraceSourceSetting.#ctor(System.String,System.Diagnostics.SourceLevels)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceSourceSetting.SourceName">
            <summary>
            Source name of trace listner
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceSourceSetting.TraceLevel">
            <summary>
            Override Trace Level setting 
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.TraceSourceSetting.TraceListeners">
            <summary>
            List of trace listners
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmConnectionStringParsedData">
            <summary>
            Stores Parsed connection info from the use of a CRM connection string. 
            This is only populated when the CRM Connection string object is used, this is read only. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.CrmConnection">
            <summary>
            This proper
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmConnection.SetOrgnameAndOnlineRegion(System.Uri)">
            <summary>
            Get the organization name and online region from the org
            </summary>
            <param name="serviceUri"></param>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.CrmConnection.Parse(System.String)">
            <summary>
            Parse the connection sting 
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.ServiceUri">
            <summary>
            URL of the Service being connected too.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.AuthenticationType">
            <summary>
            Authentication Type being used for this connection
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.PromptBehavior">
            <summary>
            OAuth Prompt behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.HomeRealmUri">
            <summary>
            Claims based Delegated Authentication Url.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.ClientCredentials">
            <summary>
            Client credentials parsed from connection string
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.UserIdentifier">
            <summary>
            OAuth User Identifier
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.DomainName">
            <summary>
            Domain of User
            Active Directory Auth only.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.UserId">
            <summary>
            User ID of the User connection to CRM
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.Password">
            <summary>
            Password of user, parsed from connection string
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.ClientId">
            <summary>
            Client ID used in the connection string
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.Organization">
            <summary>
            Organization Name parsed from the connection string.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.IsOnPremOauth">
            <summary>
            Set if the connection string is for an onPremise connection
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.CrmOnlineRegion">
            <summary>
            CRM on-line region determined by the connection string
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.RedirectUri">
            <summary>
            OAuth Redirect URI
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.TokenCacheStorePath">
            <summary>
            OAuth Token Store Path
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Tooling.Connector.CrmConnection.UseUniqueConnectionInstance">
            <summary>
            When true, specifies a unique instance of the connection should be created. 
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.Extension">
            <summary>
            Extension
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Extension.ToEnum``1(System.String)">
            <summary>
            Enum extension
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Extension.ToEnum``1(System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Extension.ToDictionary(System.String)">
            <summary>
            ConnectionStringExtensions
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Extension.FormatWith(System.String,System.Object[])">
            <summary>
            StringExtensions
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Extension.FirstNotNullOrEmpty``1(System.Collections.Generic.IDictionary{``0,System.String},``0[])">
            <summary>
            ConnectionStringExtensions
            </summary>
            <typeparam name="TKey"></typeparam>
            <param name="dictionary"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.Utilities">
            <summary>
            Utility class
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Utilities.GetFileVersion(System.Reflection.Assembly)">
            <summary>
            Returns the file version of passed "executing Assembly"
            </summary>
            <param name="executingAssembly">The assembly whose version is required.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.Utilities.GetOrgnameAndOnlineRegionFromServiceUri(System.Uri,System.String@,System.String@,System.Boolean@)">
            <summary>
            Get the organization name and on-line region from the Uri
            </summary>
            <param name="serviceUri">Service Uri to parse</param>
            <param name="isOnPrem">if OnPrem, will be set to true, else false.</param>
            <param name="onlineRegion">Name of the CRM on line Region serving this request</param>
            <param name="organizationName">Name of the Organization extracted from the Service URI</param>
        </member>
        <member name="T:Microsoft.Xrm.Tooling.Connector.XmlUtil">
            <summary>
            Utility class for XML related operations.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.#ctor">
            <summary>
            Prevent XmlUtil from ever being constructed
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlReader(System.String)">
            <summary>
            Creates an XmlReader object with secure default property values.
            </summary>
            <param name="xml">The string to get the data from.</param>
            <returns>the new XmlReader object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlReader(System.String,System.Boolean)">
            <summary>
            Creates an XmlReader object with secure default property values and given whitespace setting.
            </summary>
            <param name="xml">The string to get the data from.</param>
            <param name="preserveWhiteSpace">Whether the whitespaces are to be preserved or not.</param>
            <returns>the new XmlReader object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlReader(System.IO.Stream)">
            <summary>
            Creates an XmlReader object with secure default property values.
            </summary>
            <param name="xmlStream">Xml stream.</param>
            <returns>The new XmlReader object.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlDocument">
            <summary>
            Creates an XmlDocument object with secure default property values.
            </summary>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlDocument(System.Xml.XmlReader)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            </summary>
            <param name="reader">The XmlTextReader to get the data from.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlDocument(System.IO.Stream)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            Extracts xml from the given stream and reads it into the XmlDocument.
            </summary>
            <param name="input">The XML stream to load.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlDocument(System.String)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            Loads the given XML into the XmlDocument.
            </summary>
            <param name="xml">The XML to load.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlDocument(System.String,System.Boolean)">
            <summary>
            Creates an XmlDocument object with secure default property values.
            Loads the given XML into the XmlDocument.
            This overload is useful when a whitespace only element value is valid content.
            </summary>
            <param name="xml">The XML to load.</param>
            <param name="preserveWhiteSpace">Whether the whitespaces are to be preserved or not.</param>
            <returns>the new XmlDocument object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlWriter(System.IO.TextWriter,System.Boolean)">
            <summary>
            Creates an XmlWriter on top of the provided TextWriter as per
            the .Net Framework guidelines.
            </summary>
            <param name="textWriter">TextWriter to write into</param>
            <param name="indented">True to indent the output</param>
            <returns>An XmlWriter</returns>
        </member>
        <member name="M:Microsoft.Xrm.Tooling.Connector.XmlUtil.CreateXmlWriter(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Creates an XmlWriter which writes to the specified filename using
            the specified encoding.
            </summary>
            <param name="fileName">File to write to</param>
            <param name="encoding">Encoding to use</param>
            <param name="indented">True to indent the output</param>
            <returns>An XmlWriter</returns>
        </member>
    </members>
</doc>
